### Generated by Gemini AI then fix it by ChatGPT

from openai import OpenAI
from dotenv import load_dotenv
import os

# Load API key from .env
load_dotenv()
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

def generate_text(prompt):
    """
    Generates a chat-based response using GPT-4o or other supported model.
    """
    try:
        response = client.chat.completions.create(
            model="gpt-4o",  # or "gpt-3.5-turbo"
            messages=[
                {"role": "system", "content": "You are a helpful assistant."},
                {"role": "user", "content": prompt}
            ],
            max_tokens=350,
            temperature=0.7
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        print(f"An error occurred: {e}")
        return None

if __name__ == "__main__":
    user_prompt = "Write a short poem about a rainy day."
    generated_poem = generate_text(user_prompt)

    if generated_poem:
        print("Generated Poem:")
        print(generated_poem)

    user_prompt_2 = "Translate 'Hello, how are you?' to French."
    translated_text = generate_text(user_prompt_2)

    if translated_text:
        print("\nTranslation:")
        print(translated_text)
